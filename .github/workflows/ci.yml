name: Java CI with Gradle

on:
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'master'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests with Gradle(containing e2eTest, unitTest)
        run: ./gradlew test # --info # the option is for debugging

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build Docker Image for api-user
        run: docker build -t api-user:latest -f ./api-user/Dockerfile ./api-user

      - name: Run Docker Container for api-user
        run: docker run -d -p 8080:8080 --name api-user-container api-user:latest

      # Wait for server 60 seconds to be ready
      - name: Check api-user API health endpoint
        run: |
          echo "Waiting for the server to be ready..."
          for i in {1..12}; do
            response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080/health)
            if [ "$response" -eq 200 ]; then
              echo "Server is ready! Received HTTP 200."
              exit 0
            else
              echo "Received HTTP $response. Waiting for the server to be ready... ($i/12)"
              sleep 5
            fi
          done
          echo "Server did not become ready in time."
          docker logs api-user-container
          exit 1

      - name: Stop and remove Docker container
        run: |
          docker stop api-user-container
          docker rm api-user-container
